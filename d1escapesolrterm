#!/bin/bash

# Escape a solr query term

# This work was created by participants in the DataONE project, and is
# jointly copyrighted by participating institutions in DataONE. For
# more information on DataONE, see our web site at https://dataone.org.
#
#   Copyright 2015
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


VERSION="1.2.0"
APPNAME=$(basename "${0}")
APPDIR=$(dirname "${0}")
TMPDIR="/tmp"

source "${APPDIR}/script_common.sh"
URLENCODE="$(dirname ${0})/urlencode"

do_url_encode=0


function usage() {
cat << EOF
${APPNAME} version ${VERSION}

usage: ${APPNAME} OPTIONS TERM

Escape a term for use in a solr query.

OPTIONS:
  -h  Show this message
  -H  Show this message with examples
  -u  URL encode the solr escaped value
  -v  Set log level (1=error ... 4=debug)
  -V  Show version and exit

TERM:
  The solr query term to escape.

EOF
}


function usageExamples() {
  usage
cat << EOF
Example - Escape a DataONE identifier:

  ./${APPNAME} "https://pasta.lternet.edu/package/metadata/eml/knb-lter-gce/249/33"

EOF
}


# === Main ===
while getopts "hHv:Vu" OPTION
do
  case ${OPTION} in
    h) usage; exit 1;;
    H) usageExamples; exit 1;;
    V) showVersion; exit 1;;
    v) LOGLEVEL=${OPTARG};;
    u) do_url_encode=1;;
    \?) usage; exit 1;;
  esac
done

shift $((OPTIND-1))
TERM=${1}
if [[ -z ${TERM} ]]; then
  lerror "TERM to escape is required."
  exit 1
fi
linfo "TERM to escape = ${TERM}"
term_escaped="$(escapeSolrTerm ${TERM})"
linfo "Solr escaped TERM = ${term_escaped}"
term_url_escaped=$(echo ${term_escaped} | ${URLENCODE})
linfo "url+solr escaped TERM = ${term_url_escaped}"
if (( ${do_url_encode} > 0 )); then
  echo ${term_url_escaped}
else
  echo ${term_escaped}
fi
