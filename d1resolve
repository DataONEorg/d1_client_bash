#!/bin/bash
#
# Resolve the location of an object using the coordinating node resolve method.
#

VERSION="Version 0.0.1"

#Location of xmlstarlet command
XML="/usr/local/bin/xml"
TMP="/tmp"
URLENCODE="`dirname $0`/urlencode"
baseurl=$NODE
tmpfile="${TMP}/$(basename $0).$$.xml"
keepresp=""

usage()
{
cat << EOF

usage: $(basename $0) OPTIONS PID

Show the location of an object identified by PID as reported by the resolve() 
method of the (Coordinating) Node specified by the NODE environment variable or 
from the -b parameter. 

PID:

  Identifier of object to resolve.

OPTIONS:

  -h  Show this message
  -b  Base URL of node being contacted to read format list (${baseurl})
  -k  Keep response (default is to delete on exit)
  -D  Destination for response (${tmpfile})
  -r  Show raw response
  -v  Be a bit more verbose
  -V  Show version (${VERSION})
 
EOF
}

show_version()
{
  echo ${VERSION}
}


## Parse command line
while getopts "hvVrkb:D:" OPTION
do
    case $OPTION in
      h) usage; exit 1;;
      b) baseurl=$OPTARG;;
      k) keepresp=1;;
      D) tmpfile=$OPTARG;;
      v) verbose=1;;
      r) raw=1;;
      V) show_version; exit 1;;
      \?) usage; exit 1;;
    esac
done

if [[ -z ${baseurl} ]]; then
  echo "ERROR   : Base URL must be provided by -b or NODE environment variable"
  exit 1
 fi

shift $(($OPTIND - 1))
if [[ -z ${1} ]]; then
  echo "PID is required"
  exit 1
fi

PID="$(echo $1 | ${URLENCODE})"
if [[ -n ${verbose} ]]; then
  echo "PID     : ${1}"
  echo "Encoded : ${PID}"
fi

## REST endpoint URL relative to base url
url="${baseurl}/v1/resolve/${PID}"

if [[ -n ${verbose} ]]; then
  echo "URL     : ${url}"
fi

## Save response to temp file, capture HTTP status
CMD="curl -k -s -w \"%{http_code}\" -o \"${tmpfile}\" \"${url}\""
if [[ -n ${verbose} ]]; then
  echo "Command : ${CMD}"
  echo
fi

status=$(eval ${CMD})

EC=0
if [[ ${status} == "303" ]]; then
  if [[ -n ${raw} ]]; then
    ${XML} fo ${tmpfile}
  else
    ${XML} sel -t -m "//objectLocation" -v "url" -n ${tmpfile}
  fi
else
  EC=1
  echo "ERROR   : Status of response = ${status}"
  if [[ -n ${verbose} ]]; then
    cat ${tmpfile}
  fi
fi
if [[ -z ${keepresp} ]]; then
  rm ${tmpfile}
fi
exit $EC

